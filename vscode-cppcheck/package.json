{
  "name": "vscode-cppcheck",
  "publisher": "brobeson",
  "displayName": "Cppcheck",
  "description": "Run Cppcheck on your C and C++ code.",
  "version": "0.1.0",
  "engines": {
    "vscode": "^1.78.0"
  },
  "license": "MIT",
  "categories": [
    "Linters"
  ],
  "keywords": [
    "cpp",
    "c",
    "cppcheck"
  ],
  "preview": true,
  "activationEvents": [
    "onLanguage:cpp",
    "onLanguage:c"
  ],
  "bugs": {
    "url": "https://github.com/brobeson/vscode-cppcheck/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/brobeson/vscode-cppcheck/"
  },
  "homepage": "https://github.com/brobeson/vscode-cppcheck/blob/main/README.md",
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "cppcheck.scanProject",
        "title": "Scan the Whole Project",
        "category": "Cppcheck"
      }
    ],
    "configuration": {
      "title": "cppcheck",
      "properties": {
        "cppcheck.elevateSeverity": {
          "type": "string",
          "description": "Elevate all Cppcheck messages to the specified level. Messages above this level are left alone.",
          "enum": [
            "error",
            "no elevation",
            "warning"
          ],
          "enumDescriptions": [
            "Treat Cppcheck warning, style, performance, and portability messages as errors",
            "Treat Cppcheck style, performance, and portability messages as information.",
            "Treat Cppcheck style, performance, and portability messages as warnings"
          ],
          "default": "no elevation"
        },
        "cppcheck.commandArguments": {
          "type": "array",
          "markdownDescription": "Command line arguments to pass to Cppcheck. **WARNING** This extension removes some arguments from the list. For example, `--template` is removed because the extension requires a specific template to parse the output.",
          "default": [
            "--enable=all",
            "--quiet",
            "--project=../build/compile_commands.json"
          ],
          "additionalProperties": false,
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "unitTests": "mocha ./out/tests/",
    "format": "prettier --write ./"
  },
  "devDependencies": {
    "@tsconfig/strictest": "^2.0.1",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.78.0",
    "@typescript-eslint/eslint-plugin": "^5.59.5",
    "@typescript-eslint/parser": "^5.59.5",
    "@vscode/test-electron": "^2.3.0",
    "eslint": "^8.40.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^5.0.4"
  },
  "eslintConfig": {
    "root": true,
    "ignorePatterns": [
      "**/test/**/*.ts"
    ],
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "ecmaVersion": 2022,
      "project": [
        "tsconfig.json"
      ],
      "sourceType": "module"
    },
    "extends": [
      "eslint:all",
      "plugin:@typescript-eslint/recommended",
      "plugin:@typescript-eslint/recommended-requiring-type-checking",
      "plugin:@typescript-eslint/strict"
    ],
    "plugins": [
      "@typescript-eslint"
    ],
    "env": {
      "es6": true,
      "mocha": true,
      "node": true
    },
    "rules": {
      "@typescript-eslint/no-shadow": "error",
      "array-element-newline": [
        "error",
        "consistent"
      ],
      "capitalized-comments": "off",
      "comma-dangle": [
        "error",
        "always-multiline"
      ],
      "curly": "error",
      "dot-location": [
        "error",
        "property"
      ],
      "eqeqeq": "error",
      "func-style": [
        "error",
        "declaration"
      ],
      "function-call-argument-newline": "off",
      "function-paren-newline": "off",
      "id-length": "off",
      "indent": "off",
      "max-len": [
        "error",
        {
          "code": 200,
          "comments": 80
        }
      ],
      "max-params": [
        "error",
        5
      ],
      "max-statements": [
        "error",
        15
      ],
      "multiline-comment-style": "off",
      "no-console": "off",
      "no-magic-numbers": [
        "error",
        {
          "ignore": [
            0,
            1
          ],
          "ignoreArrayIndexes": true
        }
      ],
      "no-multi-spaces": [
        "error",
        {
          "ignoreEOLComments": true
        }
      ],
      "no-shadow": "off",
      "no-ternary": "off",
      "no-warning-comments": "off",
      "object-curly-spacing": "off",
      "object-property-newline": [
        "error",
        {
          "allowAllPropertiesOnSameLine": true
        }
      ],
      "one-var": "off",
      "operator-linebreak": [
        "error",
        "before",
        {
          "overrides": {
            "=": "after"
          }
        }
      ],
      "padded-blocks": [
        "error",
        "never"
      ],
      "quote-props": [
        "error",
        "as-needed"
      ],
      "quotes": "off",
      "radix": "off",
      "sort-imports": "off",
      "sort-keys": [
        "error",
        "asc",
        {
          "natural": true
        }
      ],
      "space-before-function-paren": "off"
    }
  }
}
